@page "/product/{id:int}"
@using WebbLabb2.Client.Services.ProductService
@using WebbLabb2.Shared.DTOs
@using WebbLabb2.Client.Services.CartService
@inject IProductService productService
@inject NavigationManager navigationManager
@inject ICartService cartService

@if (product == null)
{
    <span>@message</span>
}
else
{
    <div class="container">
        <div class="row row-cols-4 align-items-center d-inline-block">
            <div class="col-4 col-sm-12 m-3">
                <img class="image" src="@product.Image" alt="@product.Name"/>
            </div>
            <div class="col-6 col-sm-12 m-3">
                <h2 class="mb-1">@product.Name</h2>
                <h5 class="text-muted">@product.Description</h5>
                <h6 class="text-muted">@("Nr." + product.Number)</h6>
                <h6 class="card-text fw-bolder">@product.Price /@(product.IsWeightable ? "kg" : "st")</h6>
                @if (@product.InStock is false)
                {
                    <h4 class="text-warning fw-bolder mt-2">Product is out of stock</h4>
                }
                else
                {
                    <button class="btn btn-primary mt-2" @onclick="AddToCart">
                        <i class="oi oi-cart"></i>&nbsp;&nbsp;&nbsp;Add to Cart
                    </button>
                }
            </div>
        </div>
        
    </div>

}

@code {
    private ProductDto? product = null;
    private string message = string.Empty;

    [Parameter]
    public int Id { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        message = "Loading product...";
        product = await productService.GetProductById(Id);
    }

    private async Task AddToCart()
    {
        var cartItem = new CartItemDto()
        {
            productId = product.Id
        };

        await cartService.AddProductToCart(cartItem);
    }

}